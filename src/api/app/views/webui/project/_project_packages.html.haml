- project_labels(project) do |label|
  :css
    .label-#{label.id} {
      color: #{h(contrast_text(label.color))};
      background-color: #{h(label.color)};
    }

.card-body
  - if project.scmsync.present?
    - if Flipper.enabled?(:scmsync, User.session)
      %table.table.table-sm.table-bordered.table-hover.w-100#packages-table-scm
        %thead
          %tr
            %th Name
            %th SCM
        %tbody
          - project.backend_only_packages.each do |package|
            %tr
              %td
                = link_to(package.name, package_show_path(project, package.name))
              %td
                = link_to(package.scmsync) do
                  %i.fas.fa-up-right-from-square
                  = URI.parse(package.scmsync).path[1..-1]
    - else
      %p
        = link_to project.scmsync do
          This project is managed in SCM
  - elsif packages.present?
    .obs-dataTable
      %table.table.table-sm.table-bordered.table-hover.w-100#packages-table{ data: { source: package_index_path(project: project) } }
        %thead
          %tr
            %th.w-50 Name
            - if Flipper.enabled?(:labels, User.session)
              %th.w-30 Labels
            %th.w-20 Changed
        %tbody
  - else
    %p This project does not contain any packages

  - if User.possibly_nobody.can_modify?(project) && show_package_actions?
    .pt-4
      %ul.nav
        - if policy(Package.new(project: project)).create?
          %li.nav-item
            = link_to(new_package_path(project), class: 'nav-link') do
              %i.fas.fa-plus-circle.text-primary
              Create Package
        - if policy(Package.new(project: project)).create_branch?
          %li.nav-item
            = link_to(project_new_packages_branch_path(project), class: 'nav-link') do
              %i.fas.fa-code-branch.text-primary
              Branch Package

- content_for :ready_function do
  - if project.scmsync.present? && Flipper.enabled?(:scmsync, User.session)
    :plain
      initializeDataTable('#packages-table-scm');
  - else
    - if Flipper.enabled?(:labels, User.session)
      :plain
        initializeRemoteDatatable('#packages-table', {
            "columns": [
             {"data": "name"},
              {"data": "labels", "orderable": false},
              {"data": "changed"}
            ]
          });
    - else
      :plain
        initializeRemoteDatatable('#packages-table', {
            "columns": [
              {"data": "name"},
              {"data": "changed"}
            ]
          });
